<configuration>
  <system.webServer>

    <!-- 
      Esta seção é crucial para o IIS. Ela define as variáveis de ambiente
      que sua API vai usar no servidor. Substitua pelos seus valores de produção.
    -->
    <appSettings>
      <add key="API_TOKEN" value="seu_token_de_producao_aqui" />
      <add key="SQLSERVER_HOST" value="IP_ou_Nome_Do_Servidor_De_Banco_De_Dados" />
      <!-- <add key="SQLSERVER_DB" value="intranet" /> --> <!-- Para a api-DB-INTRANET -->
      <add key="SQLSERVER_DB" value="dfMed" /> <!-- Para a api-DB-DFMED -->
      <add key="SQLSERVER_USER" value="usuario_do_banco" />
      <add key="SQLSERVER_PASSWORD" value="senha_do_banco" />
      <add key="SQLSERVER_PORT" value="1433" />
      <!-- A variável PORT é gerenciada pelo IIS/iisnode, não precisa definir aqui -->
    </appSettings>

    <handlers>
      <!-- O iisnode vai executar este arquivo para iniciar a API -->
      <add name="iisnode" path="src/index.js" verb="*" modules="iisnode" />
    </handlers>

    <rewrite>
      <rules>
        <!-- Esta regra garante que todas as requisições (ex: /api/users/login) cheguem ao Express -->
        <rule name="Nodejs" stopProcessing="true">
          <match url="/*" />
          <conditions>
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
          </conditions>
          <action type="Rewrite" url="src/index.js" />
        </rule>
      </rules>
    </rewrite>

    <!-- Opcional, mas útil: Reinicia a API se algum arquivo .js for alterado -->
    <iisnode watchedFiles="*.js;src/**/*.js;web.config" />

  </system.webServer>
</configuration>